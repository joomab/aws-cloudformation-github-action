name: 'Deploy to AWS CloudFormation'

on: 
  push:
    branches: [ dev_cfn ]
  workflow_dispatch:

env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.DEV_ACCESS_KEY }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.DEV_SECRET_ACCESS_KEY }}
  SAM_TEMPLATE: sam-app/template.yaml
  ENV_STACK_NAME: ${{ vars.DEV_STACK_NAME }}
  ENV_PIPELINE_EXECUTION_ROLE: ${{ secrets.DEV_PIPELINE_EXECUTION_ROLE }}
  ENV_CLOUDFORMATION_EXECUTION_ROLE: ${{ secrets.DEV_CLOUDFORMATION_EXECUTION_ROLE }}
  ENV_ARTIFACTS_BUCKET: ${{ secrets.DEV_ARTIFACTS_BUCKET }}
  ENV_REGION: us-east-1
  STACK_PARAMETERS: ${{ vars.DEV_PARAMETERS }}

jobs:
  build-and-package:
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
      - name: Build resources
        run: |
          sam validate --template "${SAM_TEMPLATE}"
          sam build --template ${SAM_TEMPLATE} --build-dir build-dir

      - name: Assume the env pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ENV_REGION }}
          role-to-assume: ${{ env.ENV_PIPELINE_EXECUTION_ROLE }}
          role-session-name: env-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Upload artifacts to env artifact buckets
        run: |
          sam package \
            --s3-bucket ${ENV_ARTIFACTS_BUCKET} \
            --region ${ENV_REGION} \
            --output-template-file packaged-env.yaml

      - uses: actions/upload-artifact@v3
        with:
          name: packaged-env.yaml
          path: packaged-env.yaml
  deploy:
    needs: [build-and-package]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code from master branch
        uses: actions/checkout@v2
      # Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        # with:
        #   aws-access-key-id: ${{ secrets.DEV_ACCESS_KEY }}
        #   aws-secret-access-key: ${{ secrets.DEV_SECRET_ACCESS_KEY }}
        #   aws-region: ${{ github.event.inputs.region }}
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ENV_REGION }}
          role-to-assume: ${{ env.ENV_PIPELINE_EXECUTION_ROLE }}
          role-session-name: env-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Deploy to AWS CloudFormation
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: az-test-stack
          template: template.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "S3Name=test-jabzum-az-bucket"
  